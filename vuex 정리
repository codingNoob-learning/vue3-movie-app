        - Home.vue------- Headline.vue
App.vue - Movie.vue     | Search.vue
        - About.vue     | MovieList.vue------ MovieItem.vue

현재 이런 구조를 가지고 있는데
특정 vue에서 영화 정보를 검색해서 가져오고 그 데이터를 가지고
Movie.vue / Search.vue / MovieList.vue / MovieItem.vue에서도 처리를 해줘야 하는데
vue끼리 데이터를 주고 받으려면 props나 Provide Inject를 쓰기에는 비효율적이므로
vuex에서 제공하는 Store라는 개념을 이용해서 movie.js를 만들어서 데이터를 그 안에 저장.
필요한 vue에서 store에 접근하여 그 데이터를 가져와서 쓸 수 있게 함.

 - store의 구조
namespaced = 모듈의 이름으로 사용
state = data()
getters = computed / state의 데이터를 가져와서 활용하기만 함.
mutations = methods(변이) / state의 데이터를 활용할 수도, 수정할 수 있음.
actions = methods(비동기) / state, getters, mutations를 모두 가져와서 활용할 수 있음.

위 4개를 모두 묶어서 context로 묶어서 활용하는데
context.state = state
context.gettes = getters
context.commit = mutations
context.dispatch = actions

 - store에서 vue 컴포넌트에서 가져오기
state = this.$store.state.모듈명.상태이름 ex) this.$store.state.about.name
getters = this.$store.getters['모듈명/게터명'] ex) this.$store.getters['about/count']
mutations = this.$store.commit('모듈명/변이명(메소드)')
actions = this.$store.dispatch('모듈명/액션명(비동기 메소드)')
  ex) this.$store.dispatch('moviesearchMovies', {

 - vuex helper
위에 적혀있는 것처럼 작성을 하게 되면 하나하나씩 작성을 저런 문법으로 작성해야 가져와야하기 때문에
코드가 길어짐. 그래서 그것을 간소화시켜주는 것이 helper
state = ...mapState('모듈명', [
                '상태명1', '상태명2', ...
        ])

getters = ...mapGetters('모듈명', [
                '게터명1', '게터명2', ...
        ])

위 두개는 vue 컴포넌트에서 computed에 등록해야함.

mutations = ...mapMutations('모듈명', [
                '변이메소드명1', '변이메소드명2', ...
        ])

actions = ...mapActions('모듈명', [
                '비동기메소드명1', '비동기메소드명2', ...
        ])

위 두개는 vue 컴포넌트에서 methods에 등록해야 함.